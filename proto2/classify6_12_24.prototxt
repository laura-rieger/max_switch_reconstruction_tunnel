name: "miniLCLreconstruction"

# ILSVRC2014_DET_train
layers {
  name: "data"
  top: "data"
  top: "label"
  type: DATA
  data_param {
    # path to the DB
    source: "dataset/ILSVRC2014_DET_train_lmdb"
    # type of DB: LEVELDB or LMDB (LMDB supports concurrent reads)
    backend: LMDB
    # batch processing improves efficiency.
    batch_size: 16
  }
  transform_param {
    mean_file: "dataset/ILSVRC2014_DET_train_lmdb/mean.binaryproto"
  }
  include: { phase: TRAIN }
}

# ILSVRC2013_DET_val
layers {
  name: "data"
  top: "data"
  type: DATA
  data_param {
    # path to the DB
    source: "dataset/ILSVRC2013_DET_val_lmdb_class1"
    # type of DB: LEVELDB or LMDB (LMDB supports concurrent reads)
    backend: LMDB
    # batch processing improves efficiency.
    batch_size: 16
  }
  transform_param {
    mean_file: "dataset/ILSVRC2014_DET_train_lmdb/mean.binaryproto"
  }
  include: { phase: TEST }
}


# 128x128
# conv1_1
layers {  bottom: "data"  top: "conv1_1"  name: "conv1_1"  type: CONVOLUTION
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  #blobs_lr: 0 blobs_lr: 0 weight_decay: 0 weight_decay: 0
  convolution_param {    num_output: 6    pad: 1    kernel_size: 3
    weight_filler {      type: "xavier"          }
    bias_filler {      type: "constant"      value: 0    }}}
layers {  bottom: "conv1_1"  top: "conv1_1"  name: "relu1_1"  type: RELU}
# conv1_2
layers {  bottom: "conv1_1"  top: "conv1_2"  name: "conv1_2"  type: CONVOLUTION
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  #blobs_lr: 0 blobs_lr: 0 weight_decay: 0 weight_decay: 0
  convolution_param {    num_output: 6    pad: 1    kernel_size: 3
    weight_filler {      type: "xavier"          }
    bias_filler {      type: "constant"      value: 0    }}}
layers {  bottom: "conv1_2"  top: "conv1_2"  name: "relu1_2"  type: RELU}

# pool1
layers {
  bottom: "conv1_2"  top: "pool1"
  top:"pool1_mask"
  name: "pool1"  type: POOLING
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 64x64
# conv2_1
layers {  bottom: "pool1"  top: "conv2_1"  name: "conv2_1"  type: CONVOLUTION
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  #blobs_lr: 0 blobs_lr: 0 weight_decay: 0 weight_decay: 0
  convolution_param {    num_output: 12    pad: 1    kernel_size: 3
    weight_filler {      type: "xavier"          }
    bias_filler {      type: "constant"      value: 0    }}}
layers {  bottom: "conv2_1"  top: "conv2_1"  name: "relu2_1"  type: RELU}

# conv2_2
layers {  bottom: "conv2_1"  top: "conv2_2"  name: "conv2_2"  type: CONVOLUTION
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  #blobs_lr: 0 blobs_lr: 0 weight_decay: 0 weight_decay: 0
  convolution_param {    num_output: 12    pad: 1    kernel_size: 3
    weight_filler {      type: "xavier"          }
    bias_filler {      type: "constant"      value: 0    }}}
layers {  bottom: "conv2_2"  top: "conv2_2"  name: "relu2_2"  type: RELU}

# pool2
layers {
  bottom: "conv2_2"  top: "pool2"
  top: "pool2_mask"
  name: "pool2"  type: POOLING
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 32x32
# conv3_1
layers {  bottom: "pool2"  top: "conv3_1"  name: "conv3_1"  type: CONVOLUTION
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  #blobs_lr: 0 blobs_lr: 0 weight_decay: 0 weight_decay: 0
  convolution_param {    num_output: 24    pad: 1    kernel_size: 3
    weight_filler {      type: "xavier"          }
    bias_filler {      type: "constant"      value: 0    }}}
layers {  bottom: "conv3_1"  top: "conv3_1"  name: "reul3_1"  type: RELU}

# conv3_2
layers {  bottom: "conv3_1"  top: "conv3_2"  name: "conv3_2"  type: CONVOLUTION
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  #blobs_lr: 0 blobs_lr: 0 weight_decay: 0 weight_decay: 0
  convolution_param {    num_output: 24    pad: 1    kernel_size: 3
    weight_filler {      type: "xavier"          }
    bias_filler {      type: "constant"      value: 0    }}}
layers {  bottom: "conv3_2"  top: "conv3_2"  name: "reul3_2"  type: RELU}

# pool3
layers {
  bottom: "conv3_2"  top: "pool3"
  top: "pool3_mask"
  name: "pool3"  type: POOLING
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}
#16x16
## pool4
#layers {
#  bottom: "pool3"  top: "pool4"
#  name: "pool4"  type: POOLING
#  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
#}
##8x8

layers {  bottom: "pool3"  top: "fc4"  name: "fc4"  type: INNER_PRODUCT
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  inner_product_param {
    num_output: 1024
    weight_filler {type: "xavier"}
    bias_filler {type: "constant"  value: 0    }}}
layers {  bottom: "fc4"  top: "fc4"  name: "reul4"  type: RELU}

layers {  bottom: "fc4"  top: "fc5"  name: "fc5"  type: INNER_PRODUCT
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  inner_product_param {
    num_output: 1024
    weight_filler {type: "xavier"}
    bias_filler {type: "constant"  value: 0    }}}
layers {  bottom: "fc5"  top: "fc5"  name: "reul5"  type: RELU}

layers {  bottom: "fc5"  top: "fc6"  name: "fc6"  type: INNER_PRODUCT
  blobs_lr: 1 blobs_lr: 2 weight_decay: 0 weight_decay: 0
  inner_product_param {
    num_output: 200
    weight_filler {type: "xavier"}
    bias_filler {type: "constant"  value: 0    }}}
	
layers {
  bottom: "fc6"
  bottom: "label"
  top: "prob"
  name: "prob"
  type: SOFTMAX_LOSS
}

layers {  name: "silence1"  type: SILENCE  bottom: "pool1_mask"}
layers {  name: "silence2"  type: SILENCE  bottom: "pool2_mask"}
layers {  name: "silence3"  type: SILENCE  bottom: "pool3_mask"}